import "globals.act";
import "channel.act";
import "sync.act";

export template <pint sz>
defproc sync(globals g; bool a0, a1, b, v)
{
	// TODO Implement the two direction arbiter
}

export template <pint sz>
defproc syncbuf(globals g; bool clk, _clk; e1of<1> L, R)
{
	// TODO Tie that arbiter into a dataless buffer here
}

export defproc testbench(globals g; e1of<1> L, R)
{
	bool clk, _clk;
	source_clk<31, 6> source_C(g, clk, _clk);

	pint N = 3;
	e1of<1> C[N+1];
	C[0] = L;
	C[N] = R;
	syncbuf<6> buf[N];
	(i:N:
		[ (i%2) = 0 -> buf[i](g, clk, _clk, C[i], C[i+1]);
		[] (i%2) = 1 -> buf[i](g, _clk, clk, C[i], C[i+1]);
		]
	)
}

globals g;
e1of<1> A, B;
source source_A(g, A);
sink sink_B(g, B);
testbench dut(g, A, B);
